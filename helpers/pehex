#! /usr/bin/perl

use warnings;
use strict;
use Getopt::Long qw(:config bundling); # for case sensitive
use Pod::Usage qw(pod2usage);;
use Scalar::Util qw(looks_like_number);

=head1 SYNOPSIS

Simple program for converting decimal values to hex from input stream.
Works with line parameters as well as input streams.

pehex [-h|--help] NUM_1 NUM_2 NUM_3 .....

=over

=item Example with line params:

=item $ pehex 10 15

=item 0xa 0xf

=back

=over

=item Example with input stream:

=item $ echo 15|pehex

=item 0xf

=back

=cut

sub convert_line_to_hex {
	my $line = shift;

	my @words = split(' ', $line);
	foreach my $word (@words) {
		if (looks_like_number($word)) {
			printf("0x%x ", $word);
		} else {
			print("N/A ");
		}
	}
	print "\n";
}

my %params = ('help' => 0);
GetOptions('help|h' => \$params{'help'});

pod2usage(0) if $params{'help'};

### Start #####
if (@ARGV) {
	convert_line_to_hex(join(' ', @ARGV));
	exit(0);
}

while (my $line = <STDIN>) {
	convert_line_to_hex($line);
}
